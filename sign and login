import React, { useState } from "react";

export default function App() {
  const [users, setUsers] = useState([]); // Dynamic users
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [currentUser, setCurrentUser] = useState("");

  // Sign-up function
  const handleSignUp = () => {
    if (!email || !password) {
      alert("Please enter email and password.");
      return;
    }
    const existingUser = users.find((u) => u.email === email);
    if (existingUser) {
      alert("User already exists!");
      return;
    }
    const newUser = { email, password };
    setUsers([...users, newUser]);
    alert("Sign-up successful!");
    setEmail("");
    setPassword("");
  };

  // Login function
  const handleLogin = () => {
    const user = users.find(
      (u) => u.email === email && u.password === password
    );
    if (user) {
      setIsLoggedIn(true);
      setCurrentUser(email);
      alert("Login successful!");
    } else {
      alert("Invalid email or password!");
    }
    setEmail("");
    setPassword("");
  };

  const handleLogout = () => {
    setIsLoggedIn(false);
    setCurrentUser("");
  };

  const containerStyle = {
    padding: "20px",
    maxWidth: "400px",
    margin: "50px auto",
    border: "1px solid #ccc",
    borderRadius: "8px",
    boxShadow: "0 4px 8px rgba(0,0,0,0.1)",
    textAlign: "center",
    fontFamily: "Arial, sans-serif",
  };

  const inputStyle = {
    display: "block",
    width: "90%",
    padding: "10px",
    margin: "10px auto",
    borderRadius: "4px",
    border: "1px solid #ccc",
    fontSize: "16px",
  };

  const buttonStyle = {
    padding: "10px 20px",
    margin: "10px 5px",
    border: "none",
    borderRadius: "4px",
    backgroundColor: "#007bff",
    color: "#fff",
    cursor: "pointer",
    fontSize: "16px",
  };

  const userListStyle = {
    marginTop: "20px",
    textAlign: "left",
  };

  return (
    <div style={containerStyle}>
      {isLoggedIn ? (
        <div>
          <h2>Welcome, {currentUser}!</h2>
          <button style={buttonStyle} onClick={handleLogout}>
            Logout
          </button>
        </div>
      ) : (
        <div>
          <h2>Sign Up / Login</h2>
          <input
            type="email"
            placeholder="Email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            style={inputStyle}
          />
          <input
            type="password"
            placeholder="Password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            style={inputStyle}
          />
          <div>
            <button style={buttonStyle} onClick={handleSignUp}>
              Sign Up
            </button>
            <button style={buttonStyle} onClick={handleLogin}>
              Login
            </button>
          </div>
        </div>
      )}

      {users.length > 0 && (
        <div style={userListStyle}>
          <h3>Registered Users (Demo)</h3>
          <ul>
            {users.map((u, idx) => (
              <li key={idx}>{u.email}</li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
}
